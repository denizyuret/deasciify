universe = vanilla
executable = doit.sh
log = doit.log
notification = Never
requirements = ((OpSys == "LINUX") && ((Arch == "INTEL") || (Arch == "X86_64")))
image_size = 600000
should_transfer_files = YES
when_to_transfer_output = ON_EXIT
transfer_input_files = gpa,features.pl
coresize = 0

input = c.200K
arguments = 1
error = c1.err
output = c1.out
queue

input = c.200K
arguments = 3
error = c3.err
output = c3.out
queue

input = c.200K
arguments = 5
error = c5.err
output = c5.out
queue

input = c.200K
arguments = 7
error = c7.err
output = c7.out
queue

input = c.200K
arguments = 9
error = c9.err
output = c9.out
queue

input = c.200K
arguments = 11
error = c11.err
output = c11.out
queue

input = c.200K
arguments = 13
error = c13.err
output = c13.out
queue

input = c.200K
arguments = 15
error = c15.err
output = c15.out
queue

input = g.200K
arguments = 1
error = g1.err
output = g1.out
queue

input = g.200K
arguments = 3
error = g3.err
output = g3.out
queue

input = g.200K
arguments = 5
error = g5.err
output = g5.out
queue

input = g.200K
arguments = 7
error = g7.err
output = g7.out
queue

input = g.200K
arguments = 9
error = g9.err
output = g9.out
queue

input = g.200K
arguments = 11
error = g11.err
output = g11.out
queue

input = g.200K
arguments = 13
error = g13.err
output = g13.out
queue

input = g.200K
arguments = 15
error = g15.err
output = g15.out
queue

input = i.200K
arguments = 1
error = i1.err
output = i1.out
queue

input = i.200K
arguments = 3
error = i3.err
output = i3.out
queue

input = i.200K
arguments = 5
error = i5.err
output = i5.out
queue

input = i.200K
arguments = 7
error = i7.err
output = i7.out
queue

input = i.200K
arguments = 9
error = i9.err
output = i9.out
queue

input = i.200K
arguments = 11
error = i11.err
output = i11.out
queue

input = i.200K
arguments = 13
error = i13.err
output = i13.out
queue

input = i.200K
arguments = 15
error = i15.err
output = i15.out
queue

input = o.200K
arguments = 1
error = o1.err
output = o1.out
queue

input = o.200K
arguments = 3
error = o3.err
output = o3.out
queue

input = o.200K
arguments = 5
error = o5.err
output = o5.out
queue

input = o.200K
arguments = 7
error = o7.err
output = o7.out
queue

input = o.200K
arguments = 9
error = o9.err
output = o9.out
queue

input = o.200K
arguments = 11
error = o11.err
output = o11.out
queue

input = o.200K
arguments = 13
error = o13.err
output = o13.out
queue

input = o.200K
arguments = 15
error = o15.err
output = o15.out
queue

input = s.200K
arguments = 1
error = s1.err
output = s1.out
queue

input = s.200K
arguments = 3
error = s3.err
output = s3.out
queue

input = s.200K
arguments = 5
error = s5.err
output = s5.out
queue

input = s.200K
arguments = 7
error = s7.err
output = s7.out
queue

input = s.200K
arguments = 9
error = s9.err
output = s9.out
queue

input = s.200K
arguments = 11
error = s11.err
output = s11.out
queue

input = s.200K
arguments = 13
error = s13.err
output = s13.out
queue

input = s.200K
arguments = 15
error = s15.err
output = s15.out
queue

input = u.200K
arguments = 1
error = u1.err
output = u1.out
queue

input = u.200K
arguments = 3
error = u3.err
output = u3.out
queue

input = u.200K
arguments = 5
error = u5.err
output = u5.out
queue

input = u.200K
arguments = 7
error = u7.err
output = u7.out
queue

input = u.200K
arguments = 9
error = u9.err
output = u9.out
queue

input = u.200K
arguments = 11
error = u11.err
output = u11.out
queue

input = u.200K
arguments = 13
error = u13.err
output = u13.out
queue

input = u.200K
arguments = 15
error = u15.err
output = u15.out
queue
